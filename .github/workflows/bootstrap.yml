name: Bootstrap Environment

on:
  workflow_dispatch:
    inputs:
      code_branch:
        description: 'Code branch to checkout'
        required: true
        default: 'main'
        type: string
      target_environment:
        description: 'Target environment to deploy'
        required: true
        type: choice
        options:
          - dev
          - stage
          - stage-ndz-wrh
          - prd
          - acc
          - tst

jobs:
  bootstrap:
    runs-on: ubuntu-latest

    environment: ${{ github.event.inputs.target_environment }}

    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.code_branch }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Sanity-check AWS secrets
      run: |
        if [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] || [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ]; then
          echo "One or both AWS secrets are not set!"
          exit 1
        else
          echo "âœ… AWS secrets appear to be set"
        fi

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Terraform Init
      working-directory: ./infra/environments/${{ github.event.inputs.target_environment }}
      run: terraform init |
        -backend-config="bucket=${{ secrets.TERRAFORM_BACKEND_BUCKET }}" |
        -backend-config="key=terraform.tfstate" |
        -backend-config="region=${{ secrets.AWS_REGION }}"
    
    - name: Terraform Plan
      working-directory: ./infra/environments/${{ github.event.inputs.target_environment }}
      run:    terraform plan \
        -var-file="common.tfvars" \
        -var-file="network.tfvars" \
        -var-file="security-groups.tfvars" \
        -var-file="iam.tfvars" \
        -var-file="database.tfvars" \
        -var-file="ecr.tfvars"
        -var-file="compute.tfvars" \
         -var-file="bastion.tfvars" \
        -var-file="cloudwatch.tfvars"



    
    - name: Terraform Apply
      working-directory: ./infra/environments/${{ github.event.inputs.target_environment }}
      run: terraform apply \
        -var-file="network.tfvars" \
        -var-file="security-groups.tfvars" \
        -var-file="iam.tfvars" \
        -var-file="database.tfvars" \
        -var-file="ecr.tfvars"
        -var-file="compute.tfvars" \
        -var-file="bastion.tfvars" \
        -var-file="cloudwatch.tfvars"